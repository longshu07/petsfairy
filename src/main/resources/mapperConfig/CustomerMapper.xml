<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longshu.petsfairy.dao.CustomerMapper" >
  <resultMap id="BaseResultMap" type="com.longshu.petsfairy.entity.Customer" >
    <id column="customer_id" property="customerId" jdbcType="VARCHAR" />
    <result column="customer_phone" property="customerPhone" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="avatarurl" property="avatarurl" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="customer_age" property="customerAge" jdbcType="INTEGER" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="session_key" property="sessionKey" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    customer_id, customer_phone, nickname, avatarurl, gender, customer_age, openid, session_key, 
    token
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.longshu.petsfairy.entity.CustomerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from customer
    where customer_id = #{customerId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from customer
    where customer_id = #{customerId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.longshu.petsfairy.entity.CustomerExample" >
    delete from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.longshu.petsfairy.entity.Customer" >
    insert into customer (customer_id, customer_phone, nickname, 
      avatarurl, gender, customer_age, 
      openid, session_key, token
      )
    values (#{customerId,jdbcType=VARCHAR}, #{customerPhone,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{avatarurl,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{customerAge,jdbcType=INTEGER}, 
      #{openid,jdbcType=VARCHAR}, #{sessionKey,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.longshu.petsfairy.entity.Customer" >
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="customerPhone != null" >
        customer_phone,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="avatarurl != null" >
        avatarurl,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="customerAge != null" >
        customer_age,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="sessionKey != null" >
        session_key,
      </if>
      <if test="token != null" >
        token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="customerId != null" >
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="customerPhone != null" >
        #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatarurl != null" >
        #{avatarurl,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="customerAge != null" >
        #{customerAge,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="sessionKey != null" >
        #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.longshu.petsfairy.entity.CustomerExample" resultType="java.lang.Integer" >
    select count(*) from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update customer
    <set >
      <if test="record.customerId != null" >
        customer_id = #{record.customerId,jdbcType=VARCHAR},
      </if>
      <if test="record.customerPhone != null" >
        customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.avatarurl != null" >
        avatarurl = #{record.avatarurl,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.customerAge != null" >
        customer_age = #{record.customerAge,jdbcType=INTEGER},
      </if>
      <if test="record.openid != null" >
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.sessionKey != null" >
        session_key = #{record.sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null" >
        token = #{record.token,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update customer
    set customer_id = #{record.customerId,jdbcType=VARCHAR},
      customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      avatarurl = #{record.avatarurl,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      customer_age = #{record.customerAge,jdbcType=INTEGER},
      openid = #{record.openid,jdbcType=VARCHAR},
      session_key = #{record.sessionKey,jdbcType=VARCHAR},
      token = #{record.token,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.longshu.petsfairy.entity.Customer" >
    update customer
    <set >
      <if test="customerPhone != null and '' != customerPhone" >
        customer_phone = #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null and '' != nickname" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatarurl != null and '' != avatarurl" >
        avatarurl = #{avatarurl,jdbcType=VARCHAR},
      </if>
      <if test="gender != null and '' != gender" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="customerAge != null and '' != customerAge" >
        customer_age = #{customerAge,jdbcType=INTEGER},
      </if>
      <if test="openid != null and '' != openid" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="sessionKey != null and '' != sessionKey" >
        session_key = #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="token != null and '' != token" >
        token = #{token,jdbcType=VARCHAR},
      </if>
    </set>
    where customer_id = #{customerId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.longshu.petsfairy.entity.Customer" >
    update customer
    set customer_phone = #{customerPhone,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      avatarurl = #{avatarurl,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      customer_age = #{customerAge,jdbcType=INTEGER},
      openid = #{openid,jdbcType=VARCHAR},
      session_key = #{sessionKey,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR}
    where customer_id = #{customerId,jdbcType=VARCHAR}
  </update>
</mapper>